//////////////////////////////////////
// LOGO
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

//////////////////////////////////////
// SEARCH
.search {
  flex: 0 0 40%;

  display: flex;                                          // make input and search button in an row with same flex height
  align-items: center;                                    // make flex elements in center position vertically
  justify-content: center;                                // make flex elements in center position horizontally

  &__input {
    font-family: inherit;                                 // inherit: 繼承至父層的 font-family 設定値。
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: .7rem 2rem;
    border-radius: 100px;
    width: 90%;
    transition: all .2s;
    margin-right: -3.25rem;                                // Solved - search button wrapping, so it will move on top

    &:focus {
      outline: none;                                      // without border
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    // To change the placeholder text
    &::-webkit-input-placeholder {                        // Only work for webkit, like Chrome and Safari browsers
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  // using adjacent selector to select the sibling of the selected input
  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;                                      // without border
    }

    &:active {
      transform: translateY(2px);
    }
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3);                       // filling in the color of a SVG shape


  }
}


//////////////////////////////////////
// USER NAVIGATION
.user-nav {
  align-self: stretch;                                    // To stretch the icon boxes vertically

  display: flex;                                          // To turn this into a flex container
  align-items: center;

  // Create icon boxes for all child <div>
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;

    // Center all child <div> vertically
    display: flex;
    align-items: center;
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);                       // To fill color for SVG
  }

  &__notification {
    font-size: .8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;

    // Display notification on the upper layer
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    // To center the text only
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}


//////////////////////////////////////
// SIDE NAVIGATION
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  // Related to the pseudo-element
  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: .5rem;
    }
  }

  // Small line will becomes visible, and then expands to the right side
  &__item::before {
    content: "";                              // it must set content, otherwise it won't work on browser
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;                             // have same height of list item
    width: 3px;
    background-color: var(--color-primary);

    // without hover, it will scale 0% vertically
    transform: scaleY(0);
    transform-origin: center;                 // set the start direction of scale transition
    transition: transform .2s,                // Solved by delay .2s - Expand and scale transitions work at the same time
                width .4s cubic-bezier(1,0,0,1) .2s,
                background-color .05s;
  }
  
  &__item:hover::before,
  &__item--active::before {
    cursor: pointer;
    transform: scaleY(1);
    width: 100%;
  }

  // When click the item, the color gets a little bit brighter
  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    padding: 1.5rem 3rem;

    position: relative;
    z-index: 10;

    // Solved - <svg> and <span> are not well aligned, where <svg> is a little bit before <span>
    display: flex;
    align-items: center;
  }

  &__link:hover {
    //color: orangered;
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor;                   // Using fill method to change SVG color to current text color as parent element
  }
}


//////////////////////////////////////
// LEGAL TEXT
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;
}


//////////////////////////////////////
// GALLERY
.gallery {
  display: flex;

  &__photo {
    width: 100%;
    display: block;
  }
}


//////////////////////////////////////
// HOTEL OVERVIEW
.overview {
  display: flex;
  align-items: center;
  border-bottom: 1px solid var(--color-grey-light-2);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;
  }

  &__stars {
    //flex: 1;
    margin-right: auto;
    display: flex;
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {

  }

  &__rating {

  }

  &__rating-average {

  }

  &__rating-count {

  }

}


//////////////////////////////////////
// BUTTON INLINE
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;                                           // use inherit for smaller font size (reusable)
  border-bottom: 1px solid currentColor;
  padding-bottom: 2px;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: all .2s;

  // apply transition
  &:hover {
    color: var(--color-grey-dark-1);
  }

  // Apply animation
  &:focus {
    outline: none;
    animation: pulsate 1s infinite;                             // Solved - animations only work for one time
  }
}

// Create animation
@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0,0,0,.25);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }

}


